#!/usr/bin/env node

var http = require('http');
var MjpegCamera = require('../mjpeg-camera');
var WriteStream = require('stream').Writable;
var program = require('commander');
var pack = require('../package.json');
var unpipe = require('unpipe');
var FileOnWrite = require('file-on-write');

program
  .version(pack.version)
  .option('-u --user []', 'Set the username for camera authentication')
  .option('-pw --password []', 'Set the password for camera authentication')
  .option('-l --url []', 'Set the url for the camera')
  .option('-p --port [8080]', 'Set the port for the http server to listen on', parseInt)
  .option('-n --name [camera]', 'Set the name of the camera')
  .parse(process.argv);

if (!program.url) {
  program.help();
}

var writer = new FileOnWrite({
  path: './images',
  ext: '.jpg',
  filename: function(data) { return Date.now(); },
  filter: function(data) { console.log(data); return true;},
  transform: function(data) { return data.data; }
});

// Create a new MjpegCamera object
var camera = new MjpegCamera({
  user: program.user || '',
  password: program.password || '',
  url: program.url,
  name: typeof program.name === 'function' ? '' : program.name
});
camera.pipe(writer);
camera.start();

setTimeout(() => {
  camera.stop();
}, 5000)


